
@model StoreLocationSearchModel
@{
    Layout = "_AdminLayout";
    NopHtml.SetActiveMenuItemSystemName("Widget.StoreLocator.Menu");
    ViewBag.PageTitle = T("Plugins.Widgets.StoreLocator.Admin.PageTitle").Text;
}
<div class="content-header clearfix">
    <h1 class="float-left">
        @T("Plugins.Widgets.StoreLocator.Admin.PageTitle")
    </h1>
    <div class="float-right">
        <a asp-action="Create" class="btn btn-primary">
            <i class="fas fa-square-plus"></i>
            @T("Admin.Common.AddNew")
        </a>
        
        <button type="button" id="delete-selected" class="btn btn-danger">
            <i class="far fa-trash-can"></i>
            @T("Admin.Common.Delete.Selected")
        </button>
        <nop-action-confirmation asp-button-id="delete-selected" />
    </div>
</div>

<div class="card-body">
    <div class="card card-default">
        <div class="card-body">
            @await Html.PartialAsync("Table", new DataTablesModel
       {
           Name = "log-grid",
           UrlRead = new DataUrl("List", "StoreLocator", null),
           SearchButtonId = "search-log",
           Length = Model.PageSize,
           LengthMenu = Model.AvailablePageSizes,
          
           ColumnCollection = new List<ColumnProperty>
            {
            new ColumnProperty(nameof(StoreLocationModel.Id))
            {
            IsMasterCheckBox = true,
            Render = new RenderCheckBox("checkbox_log"),
            ClassName =  NopColumnClassDefaults.CenterAll,
            Width = "50",
            },
            new ColumnProperty(nameof(StoreLocationModel.PictureThumbnailUrl))
            {
            Title = T("Plugins.Widgets.StoreLocator.Admin.PictureThumbnailUrl").Text,
            Width = "100",
            Render = new RenderPicture(width: 100)
            },
            new ColumnProperty(nameof(StoreLocationModel.Name))
            {
            Title = T("Plugins.Widgets.StoreLocator.Admin.Name").Text,
            Width = "100"
            },
            new ColumnProperty(nameof(StoreLocationModel.Address))
            {
            Title = T("Plugins.Widgets.StoreLocator.Admin.Address").Text,
            Width = "200"
            },
            new ColumnProperty(nameof(StoreLocationModel.Id))
            {
            Title = T("Admin.Common.View").Text,
            Width = "100",
            ClassName = NopColumnClassDefaults.Button,
            Render = new RenderButtonEdit(new DataUrl("~/Admin/StoreLocator/Edit"))
            }
            }
       })
            <script>
                $(function() {
                    $('#delete-selected-action-confirmation-submit-button').bind('click', function () {
                        var postData = {
                            selectedIds: selectedIds
                        };
                        addAntiForgeryToken(postData);
                        $.ajax({
                            cache: false,
                            type: "POST",
                            url: '@(Url.Action("DeleteSelected", "StoreLocator"))',
                            data: postData,
                            error: function (jqXHR, textStatus, errorThrown) {
                                showAlert('deleteSelectedFailed', errorThrown);
                            },
                            complete: function (jqXHR, textStatus) {
                                if (jqXHR.status === 204)
                                {
                                    showAlert('nothingSelectedAlert', '@T("Admin.Common.Alert.NothingSelected")');
                                    return;
                                }
                                updateTable('#log-grid');
                            }
                        });
                        $('#delete-selected-action-confirmation').modal('toggle');
                        return false;
                    });
                });

            </script>
            <nop-alert asp-alert-id="deleteSelectedFailed" />
            <nop-alert asp-alert-id="nothingSelectedAlert" />
        </div>
    </div>
</div>
